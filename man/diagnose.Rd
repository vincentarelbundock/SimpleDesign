% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnose.R
\name{diagnose}
\alias{diagnose}
\title{Diagnose a statistical model and data generating process}
\usage{
diagnose(dgp, fit, alpha = 0.05, N = 100, dgp_parameters = NULL)
}
\arguments{
\item{dgp}{A function that generates a dataset. This function should return
a data frame when called, and optionally accept parameters passed via
`dgp_parameters`.}

\item{fit}{A function that fits the model to the data generated by `dgp`.
This function should return a data frame with columns including
`estimator`, `term`, `estimate`, and optionally `p.value`, `conf.low`,
and `conf.high`.}

\item{alpha}{A numeric value between 0 and 1 indicating the significance
level for hypothesis tests (default is 0.05).}

\item{N}{An integer specifying the number of repetitions of the simulation
to perform (default is 100).}

\item{dgp_parameters}{An optional data frame specifying parameter values
to be passed to the `dgp` function. Each row corresponds to a parameter
configuration for a single DGP run. If `NULL`, the `dgp` function is
called without additional parameters.}

\item{truth}{A numeric value representing the true value of the parameter
being estimated. This is used to compute bias, RMSE, and coverage.}
}
\value{
A data frame summarizing the diagnostic metrics:
  \describe{
    \item{rmse}{Root mean squared error of the estimates.}
    \item{bias}{Mean bias of the estimates.}
    \item{power}{Proportion of times the null hypothesis is rejected
      (if `p.value` column exists).}
    \item{coverage}{Proportion of times the confidence interval covers the
      true value (if `conf.low` and `conf.high` columns exist).}
  }
  Each row corresponds to a combination of `estimator`, `term`, and other
  grouping variables.
}
\description{
#' Diagnose a Statistical Model and Data Generating Process
}
\details{
This function evaluates the performance of a statistical model (or estimator)
against data generated from a specified data generating process (DGP). It computes
various diagnostic metrics, including root mean squared error (RMSE), bias, power,
and confidence interval coverage.


The function assumes that the `fit` function returns a data frame containing
at least the following columns:
- `estimator`: Identifier for the model or method.
- `term`: The name of the parameter being estimated.
- `estimate`: The estimated value of the parameter.

Additional columns such as `p.value`, `conf.low`, and `conf.high` are used
for computing power and coverage metrics if they are present.

The `dgp_parameters` argument allows for systematic variation of the DGP's
inputs across simulations. For each parameter configuration (a row in
`dgp_parameters`), the DGP is called, and the resulting data is passed to
the `fit` function.
}
